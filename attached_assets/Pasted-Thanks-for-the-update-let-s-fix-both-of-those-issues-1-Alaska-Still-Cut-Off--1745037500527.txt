Thanks for the update ‚Äî let‚Äôs fix both of those issues:

---

## üõ†Ô∏è 1. Alaska Still Cut Off

Let‚Äôs update the `render_svg_file()` to use a **hybrid solution**:
- Still responsive
- But uses `height="100%"` inside the `<object>` to guarantee full rendering regardless of SVG aspect

### ‚úÖ Drop this version in now:

```python
def render_svg_file(svg_path: str, title: str = None):
    import streamlit.components.v1 as components
    import base64
    import os

    try:
        with open(svg_path, "r", encoding="utf-8") as f:
            svg_data = f.read()

        if title:
            st.subheader(title)

        encoded = base64.b64encode(svg_data.encode()).decode()

        components.html(
            f"""
            <div style="display: flex; justify-content: center;">
                <object type="image/svg+xml"
                        data="data:image/svg+xml;base64,{encoded}"
                        style="width: 100%; max-width: 1000px; height: 100%; aspect-ratio: 1.6 / 1;">
                </object>
            </div>
            """,
            height=800,
            scrolling=False
        )

        st.success(f"üó∫Ô∏è Displaying: {os.path.basename(svg_path)}")

    except Exception as e:
        st.error(f"‚ö†Ô∏è Failed to render SVG: {e}")
```

> Try this with Alaska or Hawaii ‚Äî it should now show everything without cropping, no matter the SVG layout.

---

## üß± 2. UI Not Showing: Thresholds and Color Pickers

If nothing appeared, it‚Äôs likely the code wasn‚Äôt placed correctly or wrapped in a conditional that didn‚Äôt trigger.

### ‚úÖ Here‚Äôs How to Add It Safely

Right after the national or state spreadsheet output (NOT inside `st.sidebar`, and NOT gated by `if` checks that exclude it), add:

```python
if selected_election_type in ["President", "Senate", "Governor"]:
    st.markdown("### üéØ Margin Thresholds")

    tilt_max = st.slider("Tilt Margin Max (%)", 1, 5, 3)
    lean_max = st.slider("Lean Margin Max (%)", 5, 10, 7)
    likely_max = st.slider("Likely Margin Max (%)", 10, 20, 12)

    st.markdown("### üé® Color Settings")

    col1, col2, col3 = st.columns(3)

    with col1:
        st.markdown("**Democratic Shades**")
        dem_colors = {
            "Tilt": st.color_picker("Tilt Dem", "#99ccff", key="tilt_dem"),
            "Lean": st.color_picker("Lean Dem", "#6699ff", key="lean_dem"),
            "Likely": st.color_picker("Likely Dem", "#3366cc", key="likely_dem"),
            "Safe": st.color_picker("Safe Dem", "#003399", key="safe_dem")
        }

    with col2:
        st.markdown("**Republican Shades**")
        rep_colors = {
            "Tilt": st.color_picker("Tilt Rep", "#ff9999", key="tilt_rep"),
            "Lean": st.color_picker("Lean Rep", "#ff6666", key="lean_rep"),
            "Likely": st.color_picker("Likely Rep", "#cc3333", key="likely_rep"),
            "Safe": st.color_picker("Safe Rep", "#990000", key="safe_rep")
        }

    with col3:
        st.markdown("**Independent Shades**")
        ind_colors = {
            "Tilt": st.color_picker("Tilt Ind", "#cccc99", key="tilt_ind"),
            "Lean": st.color_picker("Lean Ind", "#999966", key="lean_ind"),
            "Likely": st.color_picker("Likely Ind", "#666633", key="likely_ind"),
            "Safe": st.color_picker("Safe Ind", "#333300", key="safe_ind")
        }
```

Make sure this is placed **after the spreadsheet is shown but before map rendering**.

---

Let me know once:
- Alaska shows in full
- The UI with sliders and color pickers is visible

Then we‚Äôll plug those settings into the SVG color logic!